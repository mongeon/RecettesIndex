@using Microsoft.AspNetCore.Components
@using MudBlazor
@using RecettesIndex.Models
@inject Supabase.Client SupabaseClient
@code {
    [Parameter] public Book BookToEdit { get; set; } = new();
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; }
    private Book book = new();
    private string? errorMessage;
    private List<Author> authors = new();
    private IEnumerable<Author> selectedAuthors = new HashSet<Author>();
    protected override async Task OnInitializedAsync()
    {
        var response = await SupabaseClient.From<Author>().Get();
        authors = response.Models ?? new List<Author>();
        book = new Book
        {
            Id = BookToEdit.Id,
            Name = BookToEdit.Name,
            Authors = BookToEdit.Authors ?? new List<Author>()
        };
        selectedAuthors = book.Authors != null ? new HashSet<Author>(book.Authors) : new HashSet<Author>();
    }
    private async Task Save()
    {
        errorMessage = null;
        try
        {
           // book.Authors = selectedAuthors.ToList();
            var response = await SupabaseClient.From<Book>().Where(x => x.Id == book.Id).Update(book);
            if (response.Models?.Count > 0)
                MudDialog.Close(DialogResult.Ok(response.Models[0]));
            else
                errorMessage = "Échec lors de la mise à jour du livre.";
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">Modifier le Livre</MudText>
        <MudTextField @bind-Value="book.Name" Label="Nom" Required="true" Variant="Variant.Outlined" Class="mb-2" />
        <MudSelect T="Author" Label="Auteurs (optionnel)" @bind-SelectedValues="selectedAuthors" Variant="Variant.Outlined" Class="mb-2" MultiSelection="true">
            @foreach (var author in authors)
            {
                <MudSelectItem T="Author" Value="author">@author.Name @author.LastName</MudSelectItem>
            }
        </MudSelect>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <MudAlert Severity="Severity.Error">@errorMessage</MudAlert>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Save" Color="Color.Primary" Variant="Variant.Filled">Enregistrer</MudButton>
        <MudButton OnClick="Cancel" Color="Color.Secondary" Variant="Variant.Text">Annuler</MudButton>
    </DialogActions>
</MudDialog>
