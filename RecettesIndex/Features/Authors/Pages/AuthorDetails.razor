@page "/authors/Details/{Id:int}"
@using RecettesIndex.Data
@inject HttpClient Http


@if (author == null)
{
    <RecettesPageTitle>Chargement...</RecettesPageTitle>
    <p><em>Chargement...</em></p>
}
else
{

    <RecettesPageTitle>@author.FullName</RecettesPageTitle>
    <MudText Typo="Typo.h1">@author.FullName</MudText>
@*     <MudField Label="Nom" Variant="Variant.Text">@author.FullName</MudField> *@
    <MudField Label="Date">@author.CreatedAt.ToShortDateString()</MudField>

    <MudText Typo="Typo.h2">Recettes</MudText>
    <RecettesIndex.Features.Recettes.Components.RecettesList Recettes="@recettes" />

    <MudText Typo="Typo.h2">Livres</MudText>
    <RecettesIndex.Features.Books.Components.BooksList Books="@books" />

    <MudLink Href="/authors">Retour à la liste des auteurs</MudLink>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private Author? author;
    private Recette[]? recettes;
    private Book[]? books;
    protected override async Task OnInitializedAsync()
    {
        author = await Http.GetFromJsonAsync<Author>($"api/authors/{Id}");
        recettes = await Http.GetFromJsonAsync<Recette[]>($"api/recettes/author/{Id}");
        books = await Http.GetFromJsonAsync<Book[]>($"api/books/author/{Id}");
    }
}